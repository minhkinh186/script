getgenv().autoDigsiteConfig = {
	OPTIMIZE_GAME = true, -- Set to true to optimize the game by removing unnecessary parts
	DIGSITE_RESET_DELAY = 10, -- Amount of time in seconds to wait before starting the script back up after the digsite resets
	LOAD_DELAY = 5,
	CHEST_BREAK_DELAY = 2, -- Amount of time in seconds to wait before breaking a chest
	DIG_DEPTH = 120,
	UNBROKEN_BLOCK_THRESHOLD = 150
}

local digsiteReset = false

local positions = {
	[1] = Vector3.new(14, 1, 3),
	[2] = Vector3.new(14, 1, 9),
	[3] = Vector3.new(14, 1, 14),
	[4] = Vector3.new(8, 1, 3),
	[5] = Vector3.new(8, 1, 9),
	[6] = Vector3.new(8, 1, 14),
	[7] = Vector3.new(3, 1, 3),
	[8] = Vector3.new(3, 1, 9),
	[9] = Vector3.new(3, 1, 14)
}

local function checkForChests()
	for _, v in pairs(game:GetService("Workspace").__THINGS.__INSTANCE_CONTAINER.Active.AdvancedDigsite.Important.ActiveChests:GetChildren()) do
		if v:IsA("Model") then
			pcall(function()
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Top.CFrame
				task.wait(getgenv().autoDigsiteConfig.CHEST_BREAK_DELAY)
				game:GetService("ReplicatedStorage").Network:WaitForChild("Instancing_FireCustomFromClient"):FireServer("AdvancedDigsite", "DigChest", v:GetAttribute('Coord'))
				v:Destroy()
				task.wait()
			end)
		end
	end
end

local function checkForLake()
	local foundLake = false
	for _, v in pairs(game:GetService("Workspace").__THINGS.__INSTANCE_CONTAINER.Active.AdvancedDigsite.Important.ActiveBlocks:GetChildren()) do
		if v:IsA("Part") then
			if v:FindFirstChild("Firefly") then
				foundLake = true
				break
			end
		end
	end

	if foundLake then
		print("Found magic lake")
		for _, v in pairs(game:GetService("Workspace").__THINGS.__INSTANCE_CONTAINER.Active.AdvancedDigsite.Important.ActiveBlocks:GetChildren()) do
			if v:IsA("Part") then
				if v:FindFirstChild("Firefly") then

					local function digMagicLiquid()
						checkForChests()
						local block
						for _, v2 in pairs(game:GetService("Workspace").__THINGS.__INSTANCE_CONTAINER.Active.AdvancedDigsite.Important.ActiveBlocks:GetChildren()) do
							if v2:IsA("BasePart") then
								if v2 == v then
									block = v2
								end
							end
						end

						if block then
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = block.CFrame + Vector3.new(0, 3, 0)
							game:GetService("ReplicatedStorage").Network:WaitForChild("Instancing_FireCustomFromClient"):FireServer("AdvancedDigsite", "DigBlock", block:GetAttribute('Coord'))
							task.wait()
							digMagicLiquid()
						end
					end

					digMagicLiquid()
				end
			end
		end
	end
end

local function beginCycle()
	for curPos, _ in positions do
		for _, v in pairs(game:GetService("Workspace").__THINGS.__INSTANCE_CONTAINER.Active.AdvancedDigsite.Important.ActiveBlocks:GetChildren()) do
			if v:IsA("Part") then
				if (v:GetAttribute("Coord") - positions[curPos]).Magnitude == 0 then
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame + Vector3.new(0, 3, 0)

					local counter = 0
					local function digBlock(depth)

						if counter < getgenv().autoDigsiteConfig.UNBROKEN_BLOCK_THRESHOLD then

							local block
							for _, v in pairs(game:GetService("Workspace").__THINGS.__INSTANCE_CONTAINER.Active.AdvancedDigsite.Important.ActiveBlocks:GetChildren()) do
								if v:IsA("BasePart") then
									if (v:GetAttribute("Coord") - (positions[curPos] + Vector3.new(0, depth, 0))).Magnitude == 0 then
										block = v
									end
								end
							end

							if block then
								game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = block.CFrame + Vector3.new(0, 3, 0)
								game:GetService("ReplicatedStorage").Network:WaitForChild("Instancing_FireCustomFromClient"):FireServer("AdvancedDigsite", "DigBlock", block:GetAttribute('Coord'))
								task.wait()
								counter = counter + 1
								digBlock(depth)
							end

						else
							counter = 0
						end
					end


					for i = 0, getgenv().autoDigsiteConfig.DIG_DEPTH do
						checkForLake()
						digBlock(i)
						task.wait()
					end
				end
			end
		end
	end
	print("Finished Cycle... Digging until reset")

	while not digsiteReset do
		for _, v in pairs(game:GetService("Workspace").__THINGS.__INSTANCE_CONTAINER.Active.AdvancedDigsite.Important.ActiveBlocks:GetChildren()) do
			if v:IsA("Part") then
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame + Vector3.new(0, 3, 0)

				local counter = 0
				local function digBlock()

					if counter < getgenv().autoDigsiteConfig.UNBROKEN_BLOCK_THRESHOLD then

						local block
						for _, v2 in pairs(game:GetService("Workspace").__THINGS.__INSTANCE_CONTAINER.Active.AdvancedDigsite.Important.ActiveBlocks:GetChildren()) do
							if v2:IsA("BasePart") then
								if v2 == v then
									block = v2
								end
							end
						end

						if block then
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = block.CFrame + Vector3.new(0, 3, 0)
							game:GetService("ReplicatedStorage").Network:WaitForChild("Instancing_FireCustomFromClient"):FireServer("AdvancedDigsite", "DigBlock", block:GetAttribute('Coord'))
							task.wait()
							counter = counter + 1
							digBlock()
						end

					else
						counter = 0
					end
				end

				checkForChests()
				checkForLake()
				digBlock()
				task.wait()
			end
		end
	end
	digsiteReset = false
end


if getgenv().autoDigsiteConfig.OPTIMIZE_GAME then
	for _, v in pairs(game:GetService("Workspace").__THINGS.__INSTANCE_CONTAINER.Active.AdvancedDigsite:GetChildren()) do
		pcall(function()
			if v.Name == "Ground" then
				v.Transparency = 1
			elseif string.find(v.Name, "rock") or string.find(v.Name, "Sign") then
				v:Destroy()
			elseif v.Name == "Important" then
				v:FindFirstChild("Merchant"):Destroy()
			elseif v.Name == "Map" then
				for _, v2 in pairs(v:GetChildren()) do
					if v2:IsA("Model") or string.find(v2.Name, "Mesh") or string.find(v2.Name, "G7") then
						v2:Destroy()
					end
				end
			end
		end)
	end
end



task.spawn(function()
	while #game:GetService("Workspace").__THINGS.__INSTANCE_CONTAINER.Active.AdvancedDigsite.Important.ActiveBlocks:GetChildren() > 336 do -- MAX WILL BE 336

		task.wait()
	end
	digsiteReset = true
	print("Digsite Reset")
	task.wait(getgenv().autoDigsiteConfig.DIGSITE_RESET_DELAY)
	beginCycle()
end)

require(game:GetService("ReplicatedStorage").Library.Client.WorldFX).AnimateChest = function(...)
	return
end

for _, lootbag in pairs(game:GetService("Workspace").__THINGS:FindFirstChild("Lootbags"):GetChildren()) do
	if lootbag then
		game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Lootbags_Claim"):FireServer(unpack( { [1] = { [1] = lootbag.Name, }, } ))
		lootbag:Destroy()
		task.wait()
	end
end

game:GetService("Workspace").__THINGS:FindFirstChild("Lootbags").ChildAdded:Connect(function(lootbag)
	task.wait()
	if lootbag then
		game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Lootbags_Claim"):FireServer(unpack( { [1] = { [1] = lootbag.Name, }, } ))
		lootbag:Destroy()
	end
end)

game:GetService("Workspace").__THINGS:FindFirstChild("Orbs").ChildAdded:Connect(function(orb)
	task.wait()
	if orb then
		game:GetService("ReplicatedStorage").Network:FindFirstChild("Orbs: Collect"):FireServer(unpack( { [1] = { [1] = tonumber(orb.Name), }, } ))
		orb:Destroy()
	end
end)

beginCycle()
